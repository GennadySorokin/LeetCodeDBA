[ENG]
LeetCode
177. Nth Highest Salary

Create table If Not Exists Employee (Id int, Salary int)
Truncate table Employee
insert into Employee (id, salary) values ('1', '100')
insert into Employee (id, salary) values ('2', '200')
insert into Employee (id, salary) values ('3', '300')

Table: Employee

+-------------+------+
| Column Name | Type |
+-------------+------+
| id          | int  |
| salary      | int  |
+-------------+------+
In SQL, id is the primary key column for this table.
Each row of this table contains information about the salary of an employee.
 

Find the nth highest salary from the Employee table. If there is no nth highest salary, return null.


Thresult format is in the following example.

Example 1:

Input: 
Employee table:
+----+--------+
| id | salary |
+----+--------+
| 1  | 100    |
| 2  | 200    |
| 3  | 300    |
+----+--------+
n = 2
Output: 
+------------------------+
| getNthHighestSalary(2) |
+------------------------+
| 200                    |
+------------------------+

Example 2:

Input: 
Employee table:
+----+--------+
| id | salary |
+----+--------+
| 1  | 100    |
+----+--------+
n = 2

Output: 
+------------------------+
| getNthHighestSalary(2) |
+------------------------+
| null                   |
+------------------------+

Answer:

MySQL Explanation
The function takes an integer parameter n, subtracts 1 from it, and then selects the Salary column from the Employee table using ORDER BY Salary DESC to get the salaries in descending order. The LIMIT 1 OFFSET n clause ensures that we get the nth highest salary.

MySQL Code
CREATE FUNCTION getNthHighestSalary(n INT) RETURNS INT
BEGIN
  SET n = n - 1;
  RETURN (
    SELECT DISTINCT Salary
    FROM Employee
    ORDER BY Salary DESC
    LIMIT 1 OFFSET n
  );
END;

MS SQL Explanation
In SQL Server, we can use a Common Table Expression (CTE) along with the DENSE_RANK function to achieve the same result.
Let's modify the MySQL query:

MS SQL Code
CREATE FUNCTION getNthHighestSalary(@n INT) RETURNS INT
AS
BEGIN
  RETURN (
    SELECT TOP 1 Salary
    FROM (
      SELECT Salary, DENSE_RANK() OVER (ORDER BY Salary DESC) AS Rank
      FROM Employee
    ) AS RankedSalaries
    WHERE Rank = @n
  );
END;

[RUS]
LeetCode
177. N-ая наибольшая зарплата

Создать таблицу If Not Exists Employee (Id int, Salary int)
Усечение таблицы Employee
insert into Employee (id, salary) values ('1', '100')
insert into Employee (id, salary) values ('2', '200')
insert into Employee (id, salary) values ('3', '300')

Таблица: Сотрудник
+-------------+------+
| Column Name | Type |
+-------------+------+
| id          | int  |
| salary      | int  |
+-------------+------+
В SQL id является столбцом первичного ключа для этой таблицы.
Каждая строка этой таблицы содержит информацию о зарплате сотрудника.
 

Найдите n-ую наибольшую зарплату из таблицы Employee. Если n-й наибольший оклад отсутствует, вернуть null.


Формат результата приведен в следующем примере.

Пример 1:

Входные данные: 
Таблица "Сотрудники" (Employee):
+----+--------+
| id | salary |
+----+--------+
| 1  | 100    |
| 2  | 200    |
| 3  | 300    |
+----+--------+
n = 2

Выходные данные: 
+------------------------+
| getNthHighestSalary(2) |
+------------------------+
| 200                    |
+------------------------+

Пример 2:

Вход: 
Таблица "Сотрудники" (Employee):
+----+--------+
| id | salary |
+----+--------+
| 1 | 100     |
+----+--------+
n = 2

Выходные данные: 
+------------------------+
| getNthHighestSalary(2) |
+------------------------+
| null                   |
+------------------------+

Ответ:

MySQL Пояснение
Функция принимает целочисленный параметр n, вычитает из него 1, а затем выбирает столбец Salary из таблицы Employee с помощью ORDER BY Salary DESC, чтобы получить зарплаты в порядке убывания. Предложение LIMIT 1 OFFSET n гарантирует, что мы получим n-ю наибольшую зарплату.

Код MySQL
CREATE FUNCTION getNthHighestSalary(n INT) RETURNS INT
BEGIN
  SET n = n - 1;
  RETURN (
    SELECT DISTINCT Salary
    FROM Сотрудник
    ORDER BY Salary DESC
    LIMIT 1 OFFSET n
  );
END;

Пояснения к MS SQL
В SQL Server для достижения того же результата можно использовать общее табличное выражение (CTE) вместе с функцией DENSE_RANK.
Давайте модифицируем запрос MySQL:

Код MS SQL
CREATE FUNCTION getNthHighestSalary(@n INT) RETURNS INT
AS
BEGIN
  RETURN (
    SELECT TOP 1 Salary
    FROM (
      SELECT Зарплата, DENSE_RANK() OVER (ORDER BY Зарплата DESC) AS Rank
      FROM Сотрудник
    ) AS RankedSalaries
    WHERE Rank = @n
  );
END;
